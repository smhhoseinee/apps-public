apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: sentry-db
spec:
  users:
    - name: sentry-skymng
      databases:
        - sentry
      options: "SUPERUSER"
  image: "{{ .Values.image.imageName }}:{{ .Values.image.tag }}"
  postgresVersion: {{ .Values.postgres_version }}
  instances:
    - name: sentry-db
      replicas: {{ .Values.replicas }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  postgres-operator.crunchydata.com/cluster: sentry-db
                  postgres-operator.crunchydata.com/instance-set: sentry-db
      dataVolumeClaimSpec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: {{ .Values.storage.storage_size }}
        storageClassName: {{ .Values.storage.storage_class }}
  patroni:
    dynamicConfiguration:
      postgresql:
        pg_hba:
          - "host all all 0.0.0.0/0 trust" # this line enabled logical replication with programmatic access
          - "host all postgres 0.0.0.0/0 md5"
  backups:
    pgbackrest:
      image: 
      configuration:
      - secret:
          name: pgo-s3-creds
      global:
        repo1-retention-full: "7"
        repo1-retention-full-type: time
        repo1-s3-uri-style: path
        repo1-path: /sentry-backup
      repos:
      - name: repo1
        schedules:
          full: "0 1 * * 0"
          differential: "0 1 * * 1-6"
        s3:
          bucket: {{ .Values.backups.s3.bucket }}
          endpoint: {{ .Values.backups.s3.endpoint }}
          region: {{ .Values.backups.s3.region }}
